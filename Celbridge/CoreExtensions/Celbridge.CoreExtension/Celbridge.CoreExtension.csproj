<Project Sdk="Uno.Sdk">
  <PropertyGroup>
    <DotNetVersion Condition=" $(DotNetVersion) == '' ">net8.0</DotNetVersion>
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows')) or '$(EnableWindowsTargeting)' == 'true'">$(TargetFrameworks);$(DotNetVersion)-windows10.0.19041</TargetFrameworks>
    <TargetFrameworks>$(TargetFrameworks);$(DotNetVersion)</TargetFrameworks>
    <GenerateLibraryLayout>true</GenerateLibraryLayout>
  </PropertyGroup>

  <ItemGroup>
    <!-- Commonly used utility packages, e.g. Uno, CommunityToolkit, etc. -->
    <PackageReference Include="CommunityToolkit.Diagnostics" />
    <PackageReference Include="CommunityToolkit.MVVM" />
    <PackageReference Include="Uno.Extensions.Localization.WinUI" />
    <PackageReference Include="Uno.Toolkit.WinUI" />
    <PackageReference Include="Uno.WinUI" />

    <!-- C# Markup support -->
    <PackageReference Include="Uno.WinUI.Markup" />
    <PackageReference Include="Uno.Extensions.Markup.Generators">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Uno.Themes.WinUI.Markup" />
  </ItemGroup>

  <!-- Conditional package references for Windows build -->
  <Choose>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
      <ItemGroup>
        <PackageReference Include="Microsoft.WindowsAppSDK" />
        <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- 
    Project reference to Celbridge.BaseLibrary.
    This should be the ONLY directly referenced project in any Core Extension project.
  -->
  <ItemGroup>
    <ProjectReference Include="..\..\Celbridge.BaseLibrary\Celbridge.BaseLibrary.csproj" />
  </ItemGroup>
  
</Project>